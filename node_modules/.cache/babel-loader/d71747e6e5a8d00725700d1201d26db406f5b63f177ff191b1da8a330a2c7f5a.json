{"ast":null,"code":"import { api } from \"./api\";\nexport async function fetchFire() {\n  try {\n    const {\n      data\n    } = await api.get(\"/fire\");\n    return data;\n  } catch (err) {\n    console.log(\"error: \", err);\n  }\n}\nexport async function fetchRain() {\n  try {\n    const {\n      data\n    } = await api.get(`/rain`);\n    return data;\n  } catch (err) {\n    console.log(\"error: \", err);\n  }\n}\nexport async function fetchShelter(guNm) {\n  try {\n    let path = \"/shelter\";\n    if (typeof guNm === \"string\") path += guNm;\n    const {\n      data\n    } = await api.get(path);\n    return data;\n  } catch (err) {\n    console.log(\"error: \", err);\n  }\n}\n\n// 게시판 글 조회\nexport async function fetchPost(postId) {\n  try {\n    let path = \"/post\";\n    if (typeof postId === \"string\") path += postId;\n    const {\n      data\n    } = await api.get(path);\n    return data;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}\n\n// 게시글 작성\nexport async function createPost(userNm, password, title, content) {\n  try {\n    const {\n      data\n    } = api.post(\"/post\", {\n      userNm,\n      password,\n      title,\n      content\n    });\n    return data;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}\n\n// 게시글 수정\nexport async function updatePost(userNm, password, title, content) {\n  try {\n    const {\n      data\n    } = api.put(\"/post\", {\n      userNm,\n      password,\n      title,\n      content\n    });\n    return data;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}\n\n// 게시글 삭제\nexport async function deletePost(postId) {\n  try {\n    await api.delete(`/post/${postId}`);\n    return null;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}","map":{"version":3,"names":["api","fetchFire","data","get","err","console","log","fetchRain","fetchShelter","guNm","path","fetchPost","postId","createPost","userNm","password","title","content","post","updatePost","put","deletePost","delete"],"sources":["/Users/taghyochang/Documents/7teamdatafront/front/src/api/fetchApi.js"],"sourcesContent":["import { api } from \"./api\";\n\nexport async function fetchFire() {\n  try {\n    const { data } = await api.get(\"/fire\");\n    return data;\n  } catch (err) {\n    console.log(\"error: \", err);\n  }\n}\n\nexport async function fetchRain() {\n  try {\n    const { data } = await api.get(`/rain`);\n    return data;\n  } catch (err) {\n    console.log(\"error: \", err);\n  }\n}\n\nexport async function fetchShelter(guNm) {\n  try {\n    let path = \"/shelter\";\n    if (typeof guNm === \"string\") path += guNm;\n\n    const { data } = await api.get(path);\n    return data;\n  } catch (err) {\n    console.log(\"error: \", err);\n  }\n}\n\n// 게시판 글 조회\nexport async function fetchPost(postId) {\n  try {\n    let path = \"/post\";\n    if (typeof postId === \"string\") path += postId;\n\n    const { data } = await api.get(path);\n    return data;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}\n\n// 게시글 작성\nexport async function createPost(userNm, password, title, content) {\n  try {\n    const { data } = api.post(\"/post\", {\n      userNm,\n      password,\n      title,\n      content,\n    });\n    return data;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}\n\n// 게시글 수정\nexport async function updatePost(userNm, password, title, content) {\n  try {\n    const { data } = api.put(\"/post\", {\n      userNm,\n      password,\n      title,\n      content,\n    });\n    return data;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}\n\n// 게시글 삭제\nexport async function deletePost(postId) {\n  try {\n    await api.delete(`/post/${postId}`);\n    return null;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAE3B,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,OAAO,CAAC;IACvC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG,CAAC;EAC7B;AACF;AAEA,OAAO,eAAeG,SAASA,CAAA,EAAG;EAChC,IAAI;IACF,MAAM;MAAEL;IAAK,CAAC,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAE,OAAM,CAAC;IACvC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG,CAAC;EAC7B;AACF;AAEA,OAAO,eAAeI,YAAYA,CAACC,IAAI,EAAE;EACvC,IAAI;IACF,IAAIC,IAAI,GAAG,UAAU;IACrB,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAEC,IAAI,IAAID,IAAI;IAE1C,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMF,GAAG,CAACG,GAAG,CAACO,IAAI,CAAC;IACpC,OAAOR,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG,CAAC;EAC7B;AACF;;AAEA;AACA,OAAO,eAAeO,SAASA,CAACC,MAAM,EAAE;EACtC,IAAI;IACF,IAAIF,IAAI,GAAG,OAAO;IAClB,IAAI,OAAOE,MAAM,KAAK,QAAQ,EAAEF,IAAI,IAAIE,MAAM;IAE9C,MAAM;MAAEV;IAAK,CAAC,GAAG,MAAMF,GAAG,CAACG,GAAG,CAACO,IAAI,CAAC;IACpC,OAAOR,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;EAC3B;AACF;;AAEA;AACA,OAAO,eAAeS,UAAUA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAE;EACjE,IAAI;IACF,MAAM;MAAEf;IAAK,CAAC,GAAGF,GAAG,CAACkB,IAAI,CAAC,OAAO,EAAE;MACjCJ,MAAM;MACNC,QAAQ;MACRC,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOf,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;EAC3B;AACF;;AAEA;AACA,OAAO,eAAee,UAAUA,CAACL,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAE;EACjE,IAAI;IACF,MAAM;MAAEf;IAAK,CAAC,GAAGF,GAAG,CAACoB,GAAG,CAAC,OAAO,EAAE;MAChCN,MAAM;MACNC,QAAQ;MACRC,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOf,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;EAC3B;AACF;;AAEA;AACA,OAAO,eAAeiB,UAAUA,CAACT,MAAM,EAAE;EACvC,IAAI;IACF,MAAMZ,GAAG,CAACsB,MAAM,CAAE,SAAQV,MAAO,EAAC,CAAC;IACnC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOR,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;EAC3B;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}