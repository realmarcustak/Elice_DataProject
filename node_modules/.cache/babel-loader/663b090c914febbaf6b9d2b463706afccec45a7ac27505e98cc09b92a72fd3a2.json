{"ast":null,"code":"import{Post}from\"../../components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PostListPage=function PostListPage(props){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Post,{})});};export default PostListPage;// import React, { useState } from \"react\";\n// import { usePost } from \"../../hooks\";\n// import * as S from \"./PostList.style\";\n// function Article(props) {\n//   return (\n//     <S.ArticlePart>\n//       <article>\n//         <h2 className=\"title\">{props.title}</h2>\n//         <div className=\"body\">{props.body}</div>\n//       </article>\n//     </S.ArticlePart>\n//   );\n// }\n// function Header(props) {\n//   return (\n//     <S.HeaderPart>\n//       <header>\n//         <h1>\n//           <a\n//             className=\"title\"\n//             href=\"/\"\n//             onClick={(event) => {\n//               event.preventDefault();\n//               props.onChangeMode();\n//             }}\n//           >\n//             {props.title}\n//           </a>\n//         </h1>\n//       </header>\n//     </S.HeaderPart>\n//   );\n// }\n// function Nav(props) {\n//   const lis = [];\n//   for (let i = 0; i < props.topics.length; i++) {\n//     const t = props.topics[i];\n//     lis.push(\n//       <li key={t.postId}>\n//         <a\n//           className=\"lists\"\n//           id={t.postId}\n//           href={\"/read/\" + t.id}\n//           onClick={(event) => {\n//             event.preventDefault();\n//             props.onChangeMode(Number(event.target.id));\n//           }}\n//         >\n//           {t.title}\n//         </a>\n//       </li>\n//     );\n//   }\n//   return (\n//     <S.List>\n//       <nav>\n//         <ol>{lis}</ol>\n//       </nav>\n//     </S.List>\n//   );\n// }\n// function Create(props) {\n//   return (\n//     <S.CreatePage>\n//       <article>\n//         <h2>새 글 작성 페이지 입니다.</h2>\n//         <form\n//           onSubmit={(event) => {\n//             event.preventDefault();\n//             const title = event.target.title.value;\n//             const body = event.target.body.value;\n//             props.onCreate(title, body);\n//           }}\n//         >\n//           <p>\n//             <input type=\"text\" name=\"title\" placeholder=\"제목을 입력하세요\" />\n//           </p>\n//           <p>\n//             <textarea name=\"body\" placeholder=\"내용을 입력하세요\"></textarea>\n//           </p>\n//           <p>\n//             <input type=\"submit\" value=\"저장하기\"></input>\n//           </p>\n//         </form>\n//       </article>\n//     </S.CreatePage>\n//   );\n// }\n// function Update(props) {\n//   const [title, setTitle] = useState(props.title);\n//   const [body, setBody] = useState(props.content);\n//   return (\n//     <S.Updating>\n//       <article>\n//         <h2>지금 수정 중 입니다!</h2>\n//         <form\n//           onSubmit={(event) => {\n//             event.preventDefault();\n//             const title = event.target.title.value;\n//             const body = event.target.body.value;\n//             props.onUpdate(title, body);\n//           }}\n//         >\n//           <p>\n//             <input\n//               className=\"title\"\n//               type=\"text\"\n//               name=\"title\"\n//               placeholder=\"title\"\n//               value={title}\n//               onChange={(event) => {\n//                 setTitle(event.target.value);\n//               }}\n//             />\n//           </p>\n//           <p>\n//             <textarea\n//               className=\"body\"\n//               name=\"body\"\n//               placeholder=\"body\"\n//               value={body}\n//               onChange={(event) => {\n//                 setBody(event.target.value);\n//               }}\n//             ></textarea>\n//           </p>\n//           <p>\n//             <input type=\"submit\" value=\"수정 완료\"></input>\n//           </p>\n//         </form>\n//       </article>\n//     </S.Updating>\n//   );\n// }\n// function App() {\n//   const [mode, setMode] = useState(\"WELCOME\");\n//   const [id, setId] = useState(null);\n//   const [nextId, setNextId] = useState(4);\n//   const { post } = usePost();\n//   let content = null;\n//   let contextControl = null;\n//   // 처음 페이지를 들어왔을 때\n//   if (mode === \"WELCOME\") {\n//     content = (\n//       <Article\n//         title=\"반딧불 이야기 게시판 입니다\"\n//         body=\"새 글을 작성해 소통해 보세요!\"\n//       ></Article>\n//     );\n//     // 글을 클릭하면 해당 글 보여줌\n//   } else if (mode === \"READ\") {\n//     let title,\n//       body = null;\n//     for (let i = 0; i < post.length; i++) {\n//       if (post[i].postId === id) {\n//         title = post[i].title;\n//         body = post[i].content;\n//       }\n//     }\n//     content = <Article title={title} body={body}></Article>;\n//     contextControl = (\n//       <>\n//         <a\n//           className=\"button1\"\n//           href={\"/update/\" + id}\n//           onClick={(event) => {\n//             event.preventDefault();\n//             setMode(\"UPDATE\");\n//           }}\n//         >\n//           글 수정하기\n//         </a>\n//         <input\n//           className=\"button2\"\n//           type=\"button\"\n//           value=\"글 삭제하기\"\n//           onClick={() => {\n//             alert(\"삭제 하시겠습니까?\");\n//             const newTopics = [];\n//             for (let i = 0; i < post.length; i++) {\n//               if (post[i].id !== id) {\n//                 newTopics.push(post[i]);\n//               }\n//             }\n//             // setTopics(newTopics);\n//             setMode(\"WELCOME\");\n//           }}\n//         />\n//       </>\n//     );\n//   } else if (mode === \"CREATE\") {\n//     content = (\n//       <Create\n//         onCreate={(_title, _body) => {\n//           const newTopic = { id: nextId, title: _title, body: _body };\n//           const newTopics = [...post];\n//           newTopics.push(newTopic);\n//           // setTopics(newTopics);\n//           setMode(\"READ\");\n//           setId(nextId);\n//           setNextId(nextId + 1);\n//         }}\n//       ></Create>\n//     );\n//   } else if (mode === \"UPDATE\") {\n//     let title,\n//       body = null;\n//     for (let i = 0; i < post.length; i++) {\n//       if (post[i].id === id) {\n//         title = post[i].title;\n//         body = post[i].body;\n//       }\n//     }\n//     content = (\n//       <Update\n//         title={title}\n//         body={body}\n//         onUpdate={(title, body) => {\n//           console.log(title, body);\n//           const newTopics = [...post];\n//           const updatedTopic = { id: id, title: title, body: body };\n//           for (let i = 0; i < newTopics.length; i++) {\n//             if (newTopics[i].id === id) {\n//               newTopics[i] = updatedTopic;\n//               break;\n//             }\n//           }\n//           // setTopics(newTopics);\n//           setMode(\"READ\");\n//         }}\n//       ></Update>\n//     );\n//   }\n//   return (\n//     <S.FullBody>\n//       <S.ListPart>\n//         <Header\n//           className=\"title\"\n//           title=\"게시판\"\n//           onChangeMode={() => {\n//             setMode(\"WELCOME\");\n//           }}\n//         ></Header>\n//         <Nav\n//           className=\"nav\"\n//           topics={post}\n//           onChangeMode={(_id) => {\n//             setMode(\"READ\");\n//             setId(_id);\n//           }}\n//         ></Nav>\n//         <a\n//           className=\"buttons\"\n//           href=\"/create\"\n//           onClick={(event) => {\n//             event.preventDefault();\n//             setMode(\"CREATE\");\n//           }}\n//         >\n//           글 작성하기\n//         </a>\n//       </S.ListPart>\n//       <S.OneArticle>\n//         {content}\n//         <div>{contextControl}</div>\n//       </S.OneArticle>\n//     </S.FullBody>\n//   );\n// }\n// export default App;","map":{"version":3,"names":["Post","jsx","_jsx","Fragment","_Fragment","PostListPage","props","children"],"sources":["/Users/taghyochang/Documents/7teamdatafront/front/src/pages/post/PostList.js"],"sourcesContent":["import { Post } from \"../../components\";\n\nconst PostListPage = (props) => {\n  return (\n    <>\n      <Post />\n    </>\n  );\n};\n\nexport default PostListPage;\n\n// import React, { useState } from \"react\";\n// import { usePost } from \"../../hooks\";\n\n// import * as S from \"./PostList.style\";\n\n// function Article(props) {\n//   return (\n//     <S.ArticlePart>\n//       <article>\n//         <h2 className=\"title\">{props.title}</h2>\n//         <div className=\"body\">{props.body}</div>\n//       </article>\n//     </S.ArticlePart>\n//   );\n// }\n\n// function Header(props) {\n//   return (\n//     <S.HeaderPart>\n//       <header>\n//         <h1>\n//           <a\n//             className=\"title\"\n//             href=\"/\"\n//             onClick={(event) => {\n//               event.preventDefault();\n//               props.onChangeMode();\n//             }}\n//           >\n//             {props.title}\n//           </a>\n//         </h1>\n//       </header>\n//     </S.HeaderPart>\n//   );\n// }\n\n// function Nav(props) {\n//   const lis = [];\n//   for (let i = 0; i < props.topics.length; i++) {\n//     const t = props.topics[i];\n//     lis.push(\n//       <li key={t.postId}>\n//         <a\n//           className=\"lists\"\n//           id={t.postId}\n//           href={\"/read/\" + t.id}\n//           onClick={(event) => {\n//             event.preventDefault();\n//             props.onChangeMode(Number(event.target.id));\n//           }}\n//         >\n//           {t.title}\n//         </a>\n//       </li>\n//     );\n//   }\n//   return (\n//     <S.List>\n//       <nav>\n//         <ol>{lis}</ol>\n//       </nav>\n//     </S.List>\n//   );\n// }\n\n// function Create(props) {\n//   return (\n//     <S.CreatePage>\n//       <article>\n//         <h2>새 글 작성 페이지 입니다.</h2>\n//         <form\n//           onSubmit={(event) => {\n//             event.preventDefault();\n//             const title = event.target.title.value;\n//             const body = event.target.body.value;\n//             props.onCreate(title, body);\n//           }}\n//         >\n//           <p>\n//             <input type=\"text\" name=\"title\" placeholder=\"제목을 입력하세요\" />\n//           </p>\n//           <p>\n//             <textarea name=\"body\" placeholder=\"내용을 입력하세요\"></textarea>\n//           </p>\n//           <p>\n//             <input type=\"submit\" value=\"저장하기\"></input>\n//           </p>\n//         </form>\n//       </article>\n//     </S.CreatePage>\n//   );\n// }\n\n// function Update(props) {\n//   const [title, setTitle] = useState(props.title);\n//   const [body, setBody] = useState(props.content);\n\n//   return (\n//     <S.Updating>\n//       <article>\n//         <h2>지금 수정 중 입니다!</h2>\n//         <form\n//           onSubmit={(event) => {\n//             event.preventDefault();\n//             const title = event.target.title.value;\n//             const body = event.target.body.value;\n//             props.onUpdate(title, body);\n//           }}\n//         >\n//           <p>\n//             <input\n//               className=\"title\"\n//               type=\"text\"\n//               name=\"title\"\n//               placeholder=\"title\"\n//               value={title}\n//               onChange={(event) => {\n//                 setTitle(event.target.value);\n//               }}\n//             />\n//           </p>\n//           <p>\n//             <textarea\n//               className=\"body\"\n//               name=\"body\"\n//               placeholder=\"body\"\n//               value={body}\n//               onChange={(event) => {\n//                 setBody(event.target.value);\n//               }}\n//             ></textarea>\n//           </p>\n//           <p>\n//             <input type=\"submit\" value=\"수정 완료\"></input>\n//           </p>\n//         </form>\n//       </article>\n//     </S.Updating>\n//   );\n// }\n\n// function App() {\n//   const [mode, setMode] = useState(\"WELCOME\");\n//   const [id, setId] = useState(null);\n//   const [nextId, setNextId] = useState(4);\n\n//   const { post } = usePost();\n\n//   let content = null;\n//   let contextControl = null;\n\n//   // 처음 페이지를 들어왔을 때\n//   if (mode === \"WELCOME\") {\n//     content = (\n//       <Article\n//         title=\"반딧불 이야기 게시판 입니다\"\n//         body=\"새 글을 작성해 소통해 보세요!\"\n//       ></Article>\n//     );\n\n//     // 글을 클릭하면 해당 글 보여줌\n//   } else if (mode === \"READ\") {\n//     let title,\n//       body = null;\n//     for (let i = 0; i < post.length; i++) {\n//       if (post[i].postId === id) {\n//         title = post[i].title;\n//         body = post[i].content;\n//       }\n//     }\n\n//     content = <Article title={title} body={body}></Article>;\n//     contextControl = (\n//       <>\n//         <a\n//           className=\"button1\"\n//           href={\"/update/\" + id}\n//           onClick={(event) => {\n//             event.preventDefault();\n//             setMode(\"UPDATE\");\n//           }}\n//         >\n//           글 수정하기\n//         </a>\n//         <input\n//           className=\"button2\"\n//           type=\"button\"\n//           value=\"글 삭제하기\"\n//           onClick={() => {\n//             alert(\"삭제 하시겠습니까?\");\n//             const newTopics = [];\n//             for (let i = 0; i < post.length; i++) {\n//               if (post[i].id !== id) {\n//                 newTopics.push(post[i]);\n//               }\n//             }\n//             // setTopics(newTopics);\n//             setMode(\"WELCOME\");\n//           }}\n//         />\n//       </>\n//     );\n//   } else if (mode === \"CREATE\") {\n//     content = (\n//       <Create\n//         onCreate={(_title, _body) => {\n//           const newTopic = { id: nextId, title: _title, body: _body };\n//           const newTopics = [...post];\n//           newTopics.push(newTopic);\n//           // setTopics(newTopics);\n//           setMode(\"READ\");\n//           setId(nextId);\n//           setNextId(nextId + 1);\n//         }}\n//       ></Create>\n//     );\n//   } else if (mode === \"UPDATE\") {\n//     let title,\n//       body = null;\n//     for (let i = 0; i < post.length; i++) {\n//       if (post[i].id === id) {\n//         title = post[i].title;\n//         body = post[i].body;\n//       }\n//     }\n//     content = (\n//       <Update\n//         title={title}\n//         body={body}\n//         onUpdate={(title, body) => {\n//           console.log(title, body);\n//           const newTopics = [...post];\n//           const updatedTopic = { id: id, title: title, body: body };\n//           for (let i = 0; i < newTopics.length; i++) {\n//             if (newTopics[i].id === id) {\n//               newTopics[i] = updatedTopic;\n//               break;\n//             }\n//           }\n//           // setTopics(newTopics);\n//           setMode(\"READ\");\n//         }}\n//       ></Update>\n//     );\n//   }\n//   return (\n//     <S.FullBody>\n//       <S.ListPart>\n//         <Header\n//           className=\"title\"\n//           title=\"게시판\"\n//           onChangeMode={() => {\n//             setMode(\"WELCOME\");\n//           }}\n//         ></Header>\n//         <Nav\n//           className=\"nav\"\n//           topics={post}\n//           onChangeMode={(_id) => {\n//             setMode(\"READ\");\n//             setId(_id);\n//           }}\n//         ></Nav>\n//         <a\n//           className=\"buttons\"\n//           href=\"/create\"\n//           onClick={(event) => {\n//             event.preventDefault();\n//             setMode(\"CREATE\");\n//           }}\n//         >\n//           글 작성하기\n//         </a>\n//       </S.ListPart>\n//       <S.OneArticle>\n//         {content}\n//         <div>{contextControl}</div>\n//       </S.OneArticle>\n//     </S.FullBody>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA,OAASA,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAExC,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAK,CAC9B,mBACEJ,IAAA,CAAAE,SAAA,EAAAG,QAAA,cACEL,IAAA,CAACF,IAAI,IAAG,EACP,CAEP,CAAC,CAED,cAAe},"metadata":{},"sourceType":"module","externalDependencies":[]}