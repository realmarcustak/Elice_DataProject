{"ast":null,"code":"var _jsxFileName = \"/Users/taghyochang/Documents/7teamdatafront/front/src/components/shelterlist/ShelterList.js\",\n  _s = $RefreshSig$();\nimport * as S from \"./ShelterList.style\";\nimport ModalButton from \"./ModalButton\";\nimport { useShelter } from \"../../hooks\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ShelterList = () => {\n  _s();\n  const {\n    guNm\n  } = useParams();\n  const {\n    shelter\n  } = useShelter(guNm);\n  const [selectedGu, setSelectedGu] = useState(\"\");\n\n  //중복없이 구 이름 하나씩 모으기\n  const filter = shelter.map(shelter => {\n    return shelter.guNm;\n  });\n  // Set으로 중복 구 없애기, 가나다순\n  const totalGu = [...new Set(filter)].sort();\n  const selectedGuName = e => {\n    setSelectedGu(e.target.value);\n  };\n\n  // 전체 구 목록 조회\n  let filterGuList = shelter.map(shelter => /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"filterListBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"gu-name\",\n      children: shelter.guNm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"shelter-name\",\n      children: /*#__PURE__*/_jsxDEV(ModalButton, {\n        name: shelter,\n        shelter: shelter.shelterNm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"shelter-type\",\n      children: shelter.shelterType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"shelter-address\",\n      children: shelter.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"shelter-qty\",\n      children: [shelter.qty, \"\\uBA85\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, shelter.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n\n  // 선택한 구가 있을 경우 해당 구의 목록만 조회\n  if (selectedGu.length > 0) {\n    filterGuList = shelter.filter(selectedShelter => selectedShelter.guNm === selectedGu).map(shelter => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"gu-name\",\n        children: shelter.guNm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"shelter-name\",\n        children: /*#__PURE__*/_jsxDEV(ModalButton, {\n          name: shelter,\n          shelter: shelter.shelterNm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"shelter-type\",\n        children: shelter.shelterType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"shelter-address\",\n        children: shelter.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"shelter-qty\",\n        children: [shelter.qty, \"\\uBA85\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, shelter.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.ListTable, {\n      children: /*#__PURE__*/_jsxDEV(S.Table, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-head\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: selectedGuName,\n                  value: selectedGu,\n                  name: \"gu\",\n                  className: \"select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"\\uC11C\\uC6B8\\uC2DC 00\\uAD6C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this), totalGu.map((totalGu, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: totalGu,\n                    children: totalGu\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"\\uC2DC\\uC124 \\uC774\\uB984\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"\\uC2DC\\uC124 \\uC885\\uB958\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"\\uC2DC\\uC124 \\uC8FC\\uC18C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"\\uC218\\uC6A9 \\uC778\\uC6D0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"table-body\",\n            children: filterGuList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ShelterList, \"Btp8aUWIBx2VLCFXHrTCZvrczu0=\", false, function () {\n  return [useParams, useShelter];\n});\n_c = ShelterList;\nvar _c;\n$RefreshReg$(_c, \"ShelterList\");","map":{"version":3,"names":["S","ModalButton","useShelter","useParams","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ShelterList","_s","guNm","shelter","selectedGu","setSelectedGu","filter","map","totalGu","Set","sort","selectedGuName","e","target","value","filterGuList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","shelterNm","shelterType","address","qty","id","length","selectedShelter","ListTable","Table","onChange","index","_c","$RefreshReg$"],"sources":["/Users/taghyochang/Documents/7teamdatafront/front/src/components/shelterlist/ShelterList.js"],"sourcesContent":["import * as S from \"./ShelterList.style\";\nimport ModalButton from \"./ModalButton\";\nimport { useShelter } from \"../../hooks\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nexport const ShelterList = () => {\n  const { guNm } = useParams();\n  const { shelter } = useShelter(guNm);\n\n  const [selectedGu, setSelectedGu] = useState(\"\");\n\n  //중복없이 구 이름 하나씩 모으기\n  const filter = shelter.map((shelter) => {\n    return shelter.guNm;\n  });\n  // Set으로 중복 구 없애기, 가나다순\n  const totalGu = [...new Set(filter)].sort();\n\n  const selectedGuName = (e) => {\n    setSelectedGu(e.target.value);\n  };\n\n  // 전체 구 목록 조회\n  let filterGuList = shelter.map((shelter) => (\n    <tr key={shelter.id} className=\"filterListBody\">\n      <td className=\"gu-name\">{shelter.guNm}</td>\n      <td className=\"shelter-name\">\n        <ModalButton name={shelter} shelter={shelter.shelterNm}></ModalButton>\n      </td>\n      <td className=\"shelter-type\">{shelter.shelterType}</td>\n      <td className=\"shelter-address\">{shelter.address}</td>\n      <td className=\"shelter-qty\">{shelter.qty}명</td>\n    </tr>\n  ));\n\n  // 선택한 구가 있을 경우 해당 구의 목록만 조회\n  if (selectedGu.length > 0) {\n    filterGuList = shelter\n      .filter((selectedShelter) => selectedShelter.guNm === selectedGu)\n      .map((shelter) => (\n        <tr key={shelter.id}>\n          <td className=\"gu-name\">{shelter.guNm}</td>\n          <td className=\"shelter-name\">\n            <ModalButton\n              name={shelter}\n              shelter={shelter.shelterNm}\n            ></ModalButton>\n          </td>\n          <td className=\"shelter-type\">{shelter.shelterType}</td>\n          <td className=\"shelter-address\">{shelter.address}</td>\n          <td className=\"shelter-qty\">{shelter.qty}명</td>\n        </tr>\n      ));\n  }\n\n  return (\n    <>\n      <S.ListTable>\n        <S.Table>\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                <td>\n                  <select\n                    onChange={selectedGuName}\n                    value={selectedGu}\n                    name=\"gu\"\n                    className=\"select\"\n                  >\n                    <option>서울시 00구</option>\n                    {totalGu.map((totalGu, index) => (\n                      <option key={index} value={totalGu}>\n                        {totalGu}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n                <td>시설 이름</td>\n                <td>시설 종류</td>\n                <td>시설 주소</td>\n                <td>수용 인원</td>\n              </tr>\n            </thead>\n            <tbody className=\"table-body\">\n              {/* shelter의 guNm과 shelterDistrict/guNm의 guNm이 같을 경우 아래 리스트업하기 */}\n              {filterGuList}\n            </tbody>\n          </table>\n        </S.Table>\n      </S.ListTable>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAO,KAAKA,CAAC,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAGR,SAAS,EAAE;EAC5B,MAAM;IAAES;EAAQ,CAAC,GAAGV,UAAU,CAACS,IAAI,CAAC;EAEpC,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMW,MAAM,GAAGH,OAAO,CAACI,GAAG,CAAEJ,OAAO,IAAK;IACtC,OAAOA,OAAO,CAACD,IAAI;EACrB,CAAC,CAAC;EACF;EACA,MAAMM,OAAO,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACH,MAAM,CAAC,CAAC,CAACI,IAAI,EAAE;EAE3C,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5BP,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,IAAIC,YAAY,GAAGZ,OAAO,CAACI,GAAG,CAAEJ,OAAO,iBACrCN,OAAA;IAAqBmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7CpB,OAAA;MAAImB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEd,OAAO,CAACD;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC3CxB,OAAA;MAAImB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC1BpB,OAAA,CAACL,WAAW;QAAC8B,IAAI,EAAEnB,OAAQ;QAACA,OAAO,EAAEA,OAAO,CAACoB;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAe;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnE,eACLxB,OAAA;MAAImB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEd,OAAO,CAACqB;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACvDxB,OAAA;MAAImB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEd,OAAO,CAACsB;IAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtDxB,OAAA;MAAImB,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAEd,OAAO,CAACuB,GAAG,EAAC,QAAC;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,GAPxClB,OAAO,CAACwB,EAAE;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QASpB,CAAC;;EAEF;EACA,IAAIjB,UAAU,CAACwB,MAAM,GAAG,CAAC,EAAE;IACzBb,YAAY,GAAGZ,OAAO,CACnBG,MAAM,CAAEuB,eAAe,IAAKA,eAAe,CAAC3B,IAAI,KAAKE,UAAU,CAAC,CAChEG,GAAG,CAAEJ,OAAO,iBACXN,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAImB,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEd,OAAO,CAACD;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC3CxB,OAAA;QAAImB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC1BpB,OAAA,CAACL,WAAW;UACV8B,IAAI,EAAEnB,OAAQ;UACdA,OAAO,EAAEA,OAAO,CAACoB;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACd;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ,eACLxB,OAAA;QAAImB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEd,OAAO,CAACqB;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACvDxB,OAAA;QAAImB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEd,OAAO,CAACsB;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACtDxB,OAAA;QAAImB,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAEd,OAAO,CAACuB,GAAG,EAAC,QAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAVxClB,OAAO,CAACwB,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAYpB,CAAC;EACN;EAEA,oBACExB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA,CAACN,CAAC,CAACuC,SAAS;MAAAb,QAAA,eACVpB,OAAA,CAACN,CAAC,CAACwC,KAAK;QAAAd,QAAA,eACNpB,OAAA;UAAAoB,QAAA,gBACEpB,OAAA;YAAOmB,SAAS,EAAC,YAAY;YAAAC,QAAA,eAC3BpB,OAAA;cAAAoB,QAAA,gBACEpB,OAAA;gBAAAoB,QAAA,eACEpB,OAAA;kBACEmC,QAAQ,EAAErB,cAAe;kBACzBG,KAAK,EAAEV,UAAW;kBAClBkB,IAAI,EAAC,IAAI;kBACTN,SAAS,EAAC,QAAQ;kBAAAC,QAAA,gBAElBpB,OAAA;oBAAAoB,QAAA,EAAQ;kBAAO;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAS,EACvBb,OAAO,CAACD,GAAG,CAAC,CAACC,OAAO,EAAEyB,KAAK,kBAC1BpC,OAAA;oBAAoBiB,KAAK,EAAEN,OAAQ;oBAAAS,QAAA,EAChCT;kBAAO,GADGyB,KAAK;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAGnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACK;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACN,eACLxB,OAAA;gBAAAoB,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAK,eACdxB,OAAA;gBAAAoB,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAK,eACdxB,OAAA;gBAAAoB,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAK,eACdxB,OAAA;gBAAAoB,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAK;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACX;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACC,eACRxB,OAAA;YAAOmB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAE1BF;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACb;AAEP,CAAC;AAACpB,EAAA,CAvFWD,WAAW;EAAA,QACLN,SAAS,EACND,UAAU;AAAA;AAAAyC,EAAA,GAFnBlC,WAAW;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}