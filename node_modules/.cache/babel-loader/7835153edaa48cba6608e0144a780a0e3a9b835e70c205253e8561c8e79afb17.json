{"ast":null,"code":"import _regeneratorRuntime from\"/Users/taghyochang/Documents/7teamdatafront/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/taghyochang/Documents/7teamdatafront/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/taghyochang/Documents/7teamdatafront/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{fetchRain}from\"../api\";export function useRain(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rain=_useState2[0],setRain=_useState2[1];function _fetchRain(){return _fetchRain2.apply(this,arguments);}// api는 axios로 관련 data들을 가져오는 것 까지가 역할\n// hook은 api로 가져온 data를 사용하는 로직..?\n// useEffect 내부에서는 async await 함수를 사용할 수 없기에\n// _fetchRain 같이 async 함수를 따로 만들어서\n// useEffect 에서 사용한다.\n// ** useEffect 는 항상 함수를 반환해야함 그래서 async await을 잘못쓰면 프로미스 객체를 반환하게 되어 에러가 난다. **\nfunction _fetchRain2(){_fetchRain2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _rain;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetchRain();case 3:_rain=_context.sent;setRain(_rain);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(\"error\",_context.t0);case 10:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return _fetchRain2.apply(this,arguments);}useEffect(function(){_fetchRain();},[]);return{rain:rain};}","map":{"version":3,"names":["useState","useEffect","fetchRain","useRain","_useState","_useState2","_slicedToArray","rain","setRain","_fetchRain","_fetchRain2","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_rain","wrap","_callee$","_context","prev","next","sent","t0","console","log","stop"],"sources":["/Users/taghyochang/Documents/7teamdatafront/front/src/hooks/useRain.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { fetchRain } from \"../api\";\n\nexport function useRain() {\n  const [rain, setRain] = useState([]);\n\n  async function _fetchRain() {\n    try {\n      const rain = await fetchRain();\n      setRain(rain);\n    } catch (err) {\n      console.log(\"error\", err);\n    }\n  }\n\n  // api는 axios로 관련 data들을 가져오는 것 까지가 역할\n  // hook은 api로 가져온 data를 사용하는 로직..?\n\n  // useEffect 내부에서는 async await 함수를 사용할 수 없기에\n  // _fetchRain 같이 async 함수를 따로 만들어서\n  // useEffect 에서 사용한다.\n  // ** useEffect 는 항상 함수를 반환해야함 그래서 async await을 잘못쓰면 프로미스 객체를 반환하게 되어 에러가 난다. **\n  useEffect(() => {\n    _fetchRain();\n  }, []);\n\n  return { rain };\n}\n"],"mappings":"qaAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,SAAS,KAAQ,QAAQ,CAElC,MAAO,SAAS,CAAAC,OAAOA,CAAA,CAAG,CACxB,IAAAC,SAAA,CAAwBJ,QAAQ,CAAC,EAAE,CAAC,CAAAK,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAiB,QAEtB,CAAAI,UAAUA,CAAA,SAAAC,WAAA,CAAAC,KAAA,MAAAC,SAAA,GASzB;AACA;AAEA;AACA;AACA;AACA;AAAA,SAAAF,YAAA,EAAAA,WAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAfA,SAAAC,QAAA,MAAAC,KAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEuB,CAAApB,SAAS,EAAE,QAAxBK,KAAI,CAAAa,QAAA,CAAAG,IAAA,CACVf,OAAO,CAACD,KAAI,CAAC,CAACa,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAI,EAAA,CAAAJ,QAAA,aAEdK,OAAO,CAACC,GAAG,CAAC,OAAO,CAAAN,QAAA,CAAAI,EAAA,CAAM,CAAC,yBAAAJ,QAAA,CAAAO,IAAA,MAAAX,OAAA,gBAE7B,UAAAN,WAAA,CAAAC,KAAA,MAAAC,SAAA,GASDX,SAAS,CAAC,UAAM,CACdQ,UAAU,EAAE,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEF,IAAI,CAAJA,IAAK,CAAC,CACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}