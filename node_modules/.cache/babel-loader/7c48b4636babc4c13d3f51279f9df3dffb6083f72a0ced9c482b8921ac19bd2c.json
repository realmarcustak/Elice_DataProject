{"ast":null,"code":"import _toConsumableArray from\"/Users/taghyochang/Documents/7teamdatafront/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/taghyochang/Documents/7teamdatafront/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as S from\"./ShelterList.style\";import ModalButton from\"./ModalButton\";import{useShelter}from\"../../hooks\";import{useParams}from\"react-router-dom\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ShelterList=function ShelterList(){var _useParams=useParams(),guNm=_useParams.guNm;var _useShelter=useShelter(guNm),shelter=_useShelter.shelter;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),selectedGu=_useState2[0],setSelectedGu=_useState2[1];//중복없이 구 이름 하나씩 모으기\nvar filter=shelter.map(function(shelter){return shelter.guNm;});// Set으로 중복 구 없애기, 가나다순\nvar totalGu=_toConsumableArray(new Set(filter)).sort();var selectedGuName=function selectedGuName(e){setSelectedGu(e.target.value);};// 전체 구 목록 조회\nvar filterGuList=shelter.map(function(shelter){return/*#__PURE__*/_jsxs(\"tr\",{className:\"filterListBody\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"gu-name\",children:shelter.guNm}),/*#__PURE__*/_jsx(\"td\",{className:\"shelter-name\",children:/*#__PURE__*/_jsx(ModalButton,{name:shelter,shelter:shelter.shelterNm})}),/*#__PURE__*/_jsx(\"td\",{className:\"shelter-type\",children:shelter.shelterType}),/*#__PURE__*/_jsx(\"td\",{className:\"shelter-address\",children:shelter.address}),/*#__PURE__*/_jsxs(\"td\",{className:\"shelter-qty\",children:[shelter.qty,\"\\uBA85\"]})]},shelter.id);});// 선택한 구가 있을 경우 해당 구의 목록만 조회\nif(selectedGu.length>0){filterGuList=shelter.filter(function(selectedShelter){return selectedShelter.guNm===selectedGu;}).map(function(shelter){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"gu-name\",children:shelter.guNm}),/*#__PURE__*/_jsx(\"td\",{className:\"shelter-name\",children:/*#__PURE__*/_jsx(ModalButton,{name:shelter,shelter:shelter.shelterNm})}),/*#__PURE__*/_jsx(\"td\",{className:\"shelter-type\",children:shelter.shelterType}),/*#__PURE__*/_jsx(\"td\",{className:\"shelter-address\",children:shelter.address}),/*#__PURE__*/_jsxs(\"td\",{className:\"shelter-qty\",children:[shelter.qty,\"\\uBA85\"]})]},shelter.id);});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(S.ListTable,{children:/*#__PURE__*/_jsx(S.Table,{children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-head\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{onChange:selectedGuName,value:selectedGu,name:\"gu\",className:\"select\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"\\uC11C\\uC6B8\\uC2DC 00\\uAD6C\"}),totalGu.map(function(totalGu,index){return/*#__PURE__*/_jsx(\"option\",{value:totalGu,children:totalGu},index);})]})}),/*#__PURE__*/_jsx(\"td\",{children:\"\\uC2DC\\uC124 \\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"td\",{children:\"\\uC2DC\\uC124 \\uC885\\uB958\"}),/*#__PURE__*/_jsx(\"td\",{children:\"\\uC2DC\\uC124 \\uC8FC\\uC18C\"}),/*#__PURE__*/_jsx(\"td\",{children:\"\\uC218\\uC6A9 \\uC778\\uC6D0\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"table-body\",children:filterGuList})]})})})});};","map":{"version":3,"names":["S","ModalButton","useShelter","useParams","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ShelterList","_useParams","guNm","_useShelter","shelter","_useState","_useState2","_slicedToArray","selectedGu","setSelectedGu","filter","map","totalGu","_toConsumableArray","Set","sort","selectedGuName","e","target","value","filterGuList","className","children","name","shelterNm","shelterType","address","qty","id","length","selectedShelter","ListTable","Table","onChange","index"],"sources":["/Users/taghyochang/Documents/7teamdatafront/front/src/components/shelterlist/ShelterList.js"],"sourcesContent":["import * as S from \"./ShelterList.style\";\nimport ModalButton from \"./ModalButton\";\nimport { useShelter } from \"../../hooks\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nexport const ShelterList = () => {\n  const { guNm } = useParams();\n  const { shelter } = useShelter(guNm);\n\n  const [selectedGu, setSelectedGu] = useState(\"\");\n\n  //중복없이 구 이름 하나씩 모으기\n  const filter = shelter.map((shelter) => {\n    return shelter.guNm;\n  });\n  // Set으로 중복 구 없애기, 가나다순\n  const totalGu = [...new Set(filter)].sort();\n\n  const selectedGuName = (e) => {\n    setSelectedGu(e.target.value);\n  };\n\n  // 전체 구 목록 조회\n  let filterGuList = shelter.map((shelter) => (\n    <tr key={shelter.id} className=\"filterListBody\">\n      <td className=\"gu-name\">{shelter.guNm}</td>\n      <td className=\"shelter-name\">\n        <ModalButton name={shelter} shelter={shelter.shelterNm}></ModalButton>\n      </td>\n      <td className=\"shelter-type\">{shelter.shelterType}</td>\n      <td className=\"shelter-address\">{shelter.address}</td>\n      <td className=\"shelter-qty\">{shelter.qty}명</td>\n    </tr>\n  ));\n\n  // 선택한 구가 있을 경우 해당 구의 목록만 조회\n  if (selectedGu.length > 0) {\n    filterGuList = shelter\n      .filter((selectedShelter) => selectedShelter.guNm === selectedGu)\n      .map((shelter) => (\n        <tr key={shelter.id}>\n          <td className=\"gu-name\">{shelter.guNm}</td>\n          <td className=\"shelter-name\">\n            <ModalButton\n              name={shelter}\n              shelter={shelter.shelterNm}\n            ></ModalButton>\n          </td>\n          <td className=\"shelter-type\">{shelter.shelterType}</td>\n          <td className=\"shelter-address\">{shelter.address}</td>\n          <td className=\"shelter-qty\">{shelter.qty}명</td>\n        </tr>\n      ));\n  }\n\n  return (\n    <>\n      <S.ListTable>\n        <S.Table>\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                <td>\n                  <select\n                    onChange={selectedGuName}\n                    value={selectedGu}\n                    name=\"gu\"\n                    className=\"select\"\n                  >\n                    <option>서울시 00구</option>\n                    {totalGu.map((totalGu, index) => (\n                      <option key={index} value={totalGu}>\n                        {totalGu}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n                <td>시설 이름</td>\n                <td>시설 종류</td>\n                <td>시설 주소</td>\n                <td>수용 인원</td>\n              </tr>\n            </thead>\n            <tbody className=\"table-body\">\n              {/* shelter의 guNm과 shelterDistrict/guNm의 guNm이 같을 경우 아래 리스트업하기 */}\n              {filterGuList}\n            </tbody>\n          </table>\n        </S.Table>\n      </S.ListTable>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}