{"ast":null,"code":"import ascending from \"./ascending.js\";\nimport { ascendingDefined, compareDefined } from \"./sort.js\";\nexport default function rank(values) {\n  var valueof = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ascending;\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  var V = Array.from(values);\n  var R = new Float64Array(V.length);\n  if (valueof.length !== 2) V = V.map(valueof), valueof = ascending;\n  var compareIndex = function compareIndex(i, j) {\n    return valueof(V[i], V[j]);\n  };\n  var k, r;\n  Uint32Array.from(V, function (_, i) {\n    return i;\n  }).sort(valueof === ascending ? function (i, j) {\n    return ascendingDefined(V[i], V[j]);\n  } : compareDefined(compareIndex)).forEach(function (j, i) {\n    var c = compareIndex(j, k === undefined ? j : k);\n    if (c >= 0) {\n      if (k === undefined || c > 0) k = j, r = i;\n      R[j] = r;\n    } else {\n      R[j] = NaN;\n    }\n  });\n  return R;\n}","map":{"version":3,"names":["ascending","ascendingDefined","compareDefined","rank","values","valueof","arguments","length","undefined","Symbol","iterator","TypeError","V","Array","from","R","Float64Array","map","compareIndex","i","j","k","r","Uint32Array","_","sort","forEach","c","NaN"],"sources":["/Users/taghyochang/Documents/7teamdatafront/front/node_modules/d3-array/src/rank.js"],"sourcesContent":["import ascending from \"./ascending.js\";\nimport {ascendingDefined, compareDefined} from \"./sort.js\";\n\nexport default function rank(values, valueof = ascending) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  let V = Array.from(values);\n  const R = new Float64Array(V.length);\n  if (valueof.length !== 2) V = V.map(valueof), valueof = ascending;\n  const compareIndex = (i, j) => valueof(V[i], V[j]);\n  let k, r;\n  Uint32Array\n    .from(V, (_, i) => i)\n    .sort(valueof === ascending ? (i, j) => ascendingDefined(V[i], V[j]) : compareDefined(compareIndex))\n    .forEach((j, i) => {\n      const c = compareIndex(j, k === undefined ? j : k);\n      if (c >= 0) {\n        if (k === undefined || c > 0) k = j, r = i;\n        R[j] = r;\n      } else {\n        R[j] = NaN;\n      }\n    });\n  return R;\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,SAAQC,gBAAgB,EAAEC,cAAc,QAAO,WAAW;AAE1D,eAAe,SAASC,IAAIA,CAACC,MAAM,EAAuB;EAAA,IAArBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,SAAS;EACtD,IAAI,OAAOI,MAAM,CAACK,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE,MAAM,IAAIC,SAAS,CAAC,wBAAwB,CAAC;EAChG,IAAIC,CAAC,GAAGC,KAAK,CAACC,IAAI,CAACV,MAAM,CAAC;EAC1B,IAAMW,CAAC,GAAG,IAAIC,YAAY,CAACJ,CAAC,CAACL,MAAM,CAAC;EACpC,IAAIF,OAAO,CAACE,MAAM,KAAK,CAAC,EAAEK,CAAC,GAAGA,CAAC,CAACK,GAAG,CAACZ,OAAO,CAAC,EAAEA,OAAO,GAAGL,SAAS;EACjE,IAAMkB,YAAY,GAAG,SAAfA,YAAYA,CAAIC,CAAC,EAAEC,CAAC;IAAA,OAAKf,OAAO,CAACO,CAAC,CAACO,CAAC,CAAC,EAAEP,CAAC,CAACQ,CAAC,CAAC,CAAC;EAAA;EAClD,IAAIC,CAAC,EAAEC,CAAC;EACRC,WAAW,CACRT,IAAI,CAACF,CAAC,EAAE,UAACY,CAAC,EAAEL,CAAC;IAAA,OAAKA,CAAC;EAAA,EAAC,CACpBM,IAAI,CAACpB,OAAO,KAAKL,SAAS,GAAG,UAACmB,CAAC,EAAEC,CAAC;IAAA,OAAKnB,gBAAgB,CAACW,CAAC,CAACO,CAAC,CAAC,EAAEP,CAAC,CAACQ,CAAC,CAAC,CAAC;EAAA,IAAGlB,cAAc,CAACgB,YAAY,CAAC,CAAC,CACnGQ,OAAO,CAAC,UAACN,CAAC,EAAED,CAAC,EAAK;IACjB,IAAMQ,CAAC,GAAGT,YAAY,CAACE,CAAC,EAAEC,CAAC,KAAKb,SAAS,GAAGY,CAAC,GAAGC,CAAC,CAAC;IAClD,IAAIM,CAAC,IAAI,CAAC,EAAE;MACV,IAAIN,CAAC,KAAKb,SAAS,IAAImB,CAAC,GAAG,CAAC,EAAEN,CAAC,GAAGD,CAAC,EAAEE,CAAC,GAAGH,CAAC;MAC1CJ,CAAC,CAACK,CAAC,CAAC,GAAGE,CAAC;IACV,CAAC,MAAM;MACLP,CAAC,CAACK,CAAC,CAAC,GAAGQ,GAAG;IACZ;EACF,CAAC,CAAC;EACJ,OAAOb,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}